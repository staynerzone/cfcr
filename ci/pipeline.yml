groups:
- name: kubernetes
  jobs:
  - deploy-cfcr
  - teardown
- name: errands
  jobs:
  - apply-specs-errand
  - smoke-tests-errand
- name: k8s-addons
  jobs:
  - fetch-token
  - kubectl-apply-config
- name: kubernetes-dashboard
  jobs:
  - access
  - deploy-ingress-haproxy
- name: landscape
  jobs:
  - teardown
  - deploy-cfcr
  - access
  - apply-specs-errand
  - smoke-tests-errand
  - fetch-token
  - kubectl-apply-config
  - deploy-ingress-haproxy
resources:
- name: cfcr-k8s
  type: kubernetes
  source:
    server: https://cfcr-master.bootstrap.cloud.with.hate.pewpew.io:8443
    namespace: kube-system
    token: ((token))
    certificate_authority: ((tls-kubernetes.certificate))

- name: bosh-dns
  type: bosh-io-release
  source:
    repository: cloudfoundry/bosh-dns-release
    regexp: 1.10.*

- name: haproxy
  type: bosh-io-release
  source:
    repository: cloudfoundry-community/haproxy-boshrelease
    regexp: 9.4.2

- name: bosh-runtime-config
  type: bosh-config
  source: 
    <<: &bucc
      target: https://((bosh_environment)):25555
      client: ((bosh_client))
      client_secret: ((bosh_client_secret))
      ca_cert: ((bosh_ca_cert))
    config: runtime 

- name: xenial-stemcell
  type: bosh-io-stemcell
  source:
    name: bosh-openstack-kvm-ubuntu-xenial-go_agent

- name: cfcr-git
  type: git
  source:
    branch: master
    uri: git@github.com:staynerzone/cfcr.git
    private_key: ((git.private_key))

- name: haproxy-git
  type: git
  source:
    branch: master
    uri: git@github.com:staynerzone/haproxy-boshrelease.git
    private_key: ((git.private_key))

- name: cfcr
  type: bosh-deployment
  source:
    deployment: cfcr
    <<: *bucc

- name: haproxy-ingress
  type: bosh-deployment
  source:
    deployment: haproxy
    <<: *bucc

- name: bosh-errand-cfcr
  type: bosh-errand
  source:
    deployment: cfcr
    <<: *bucc

resource_types:
- name: kubernetes
  type: docker-image
  source:
    repository: zlabjp/kubernetes-resource
    tag: "1.13"

- name: bosh-errand
  type: docker-image
  source:
    repository: cfcommunity/bosh2-errand-resource

- name: bosh-deployment
  type: docker-image
  source:
    repository: cloudfoundry/bosh-deployment-resource

- name: bosh-config
  type: docker-image
  source:
    repository: cfcommunity/bosh-config-resource

jobs:
- name: teardown
  plan:
  - get: cfcr-git
  - put: cfcr
    params:
      manifest: cfcr-git/manifests/cfcr.yml
      delete:
        enabled: true
        force: true

- name: deploy-cfcr
  plan:
  - aggregate:
    - get: cfcr-git
    - get: xenial-stemcell
    - get: bosh-dns
  - put: bosh-runtime-config
    params:
      manifest: cfcr-git/configs/runtime-config-dns.yml
  - put: cfcr
    params:
      manifest: cfcr-git/manifests/cfcr.yml
      stemcells:
      - xenial-stemcell/*.tgz
      releases:
      - bosh-dns/*.tgz
      ops_files:
      - cfcr-git/manifests/ops-files/misc/single-master.yml
      - cfcr-git/manifests/ops-files/add-hostname-to-master-certificate.yml
      - cfcr-git/manifests/ops-files/add-bosh-dns.yml
      - cfcr-git/manifests/ops-files/iaas/openstack/cloud-provider.yml
#      - cfcr-git/manifests/ops-files/enable-podsecuritypolicy.yml
      - cfcr-git/manifests/ops-files/enable-bbr.yml
#      - cfcr-git/manifests/ops-files/enable-securitycontextdeny.yml
      - cfcr-git/manifests/ops-files/enable-nfs.yml
      vars:
        api-hostname: cfcr-master.bootstrap.cloud.with.hate.pewpew.io     
      cleanup: true
      recreate: false

- name: deploy-ingress-haproxy
  plan:
  - aggregate:
    - get: haproxy-git
    - get: cfcr-git 
      passed: [kubectl-apply-config]
    - get: haproxy
  - put: haproxy-ingress
    params:
      manifest: haproxy-git/manifests/haproxy.yml
      releases:
      - haproxy/*.tgz
      ops_files:
      - haproxy-git/manifests/ops-files/routed_backend_servers.yml
      vars:
        haproxy_vip: 10.43.125.38
        haproxy_disable_http: true
        haproxy_frontend_port: 443
        haproxy_backend_port: 31518
        haproxy_backend_servers: [192.168.0.22,192.168.0.23,192.168.0.24]
      cleanup: true
      recreate: false

- name: fetch-token
  plan:
  - get: cfcr-git
    passed: [smoke-tests-errand]
  - task: fetch-token
    file: cfcr-git/tasks/fetch-token/task.yml
    params:
      DIRECTOR_NAME: ((bosh_name))
      CFCR_MASTER_DNS: ((cfcr-master-dns))
      KUBO_ADMIN_PASSWORD: ((kubo-admin-password))
      KUBO_CA: ((tls-kubernetes.ca))
      CREDHUB_URL: ((credhub_url))
      CREDHUB_CLIENT: ((credhub_username))
      CREDHUB_SECRET: ((credhub_password))
      CREDHUB_CA: ((credhub_ca_cert))

- name: access
  plan:
  - get: cfcr-git
  - task: fetch-token
    file: cfcr-git/tasks/fetch-dashboard-admin-token/task.yml
    params:
      DIRECTOR_NAME: ((bosh_name))
      CFCR_MASTER_DNS: ((cfcr-master-dns))
      KUBO_ADMIN_PASSWORD: ((kubo-admin-password))
      KUBO_CA: ((tls-kubernetes.ca))


- name: kubectl-apply-config
  plan:
  - get: cfcr-git
    passed: [fetch-token]
  - put: cfcr-k8s
    params:
      kubectl: apply -f cfcr-git/imports/ingress/00-ingress-controller-baremetal.yml
  - put: cfcr-k8s
    params:
      kubectl: apply -f cfcr-git/imports/ingress/01-ingress-service.yml
  - put: cfcr-k8s
    params:
      kubectl: apply -f cfcr-git/imports/ingress/99-apple-echo-ing.yml
  - put: cfcr-k8s
    params:
      kubectl: apply -f cfcr-git/imports/ingress/99-banana-echo-ing.yml
  - put: cfcr-k8s
    params:
      kubectl: apply -f cfcr-git/imports/pods/99-apple-echo-pod.yml
  - put: cfcr-k8s
    params:
      kubectl: apply -f cfcr-git/imports/pods/99-banana-echo-pod.yml
  - put: cfcr-k8s
    params:
      kubectl: apply -f cfcr-git/imports/user/00-create-admin-service-account.yml
  - put: cfcr-k8s
    params:
      kubectl: apply -f cfcr-git/imports/user/01-create-clusterRoleBinding-admin-service-account.yml
  - put: cfcr-k8s
    params:
      kubectl: apply -f cfcr-git/imports/user/10-create-view-service-account.yml
  - put: cfcr-k8s
    params:
      kubectl: apply -f cfcr-git/imports/user/11-create-clusterRoleBinding-view-service-account.yml


- name: apply-specs-errand
  plan:
  - get: cfcr-git
    passed: [deploy-cfcr]
  - put: bosh-errand-cfcr
    params:
      name: apply-specs

- name: smoke-tests-errand
  plan:
  - get: cfcr-git
    passed: [apply-specs-errand]
  - put: bosh-errand-cfcr
    params:
      name: smoke-tests
